[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[project]
name = "sacroml"
dynamic = ["version"]
description = "Tools for the statistical disclosure control of machine learning models"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
maintainers = [
    {name = "Jim Smith", email = "james.smith@uwe.ac.uk"}
]
keywords = [
    "data-privacy",
    "data-protection",
    "machine-learning",
    "privacy",
    "privacy-tools",
    "statistical-disclosure-control",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Operating System :: OS Independent",
]
dependencies = [
    "acro==0.4.9",
    "fpdf",
    "pypdf",
    "multiprocess",
    "scikit-learn",
    "xgboost",
    "dictdiffer",
    "torch",
    "prompt-toolkit",
]

[tool.setuptools.dynamic]
version = {attr = "sacroml.version.__version__"}

[project.urls]
"Homepage" = "https://github.com/AI-SDC/SACRO-ML"
"Changelog" = "https://github.com/AI-SDC/SACRO-ML/CHANGELOG.md"
"Documentation" = "https://ai-sdc.github.io/SACRO-ML/"
"Bug Tracker" = "https://github.com/AI-SDC/SACRO-ML/issues"
"Discussions" = "https://github.com/AI-SDC/SACRO-ML/discussions"

[project.scripts]
sacroml = "sacroml.main:main"

[project.optional-dependencies]
doc = [
    "numpydoc",
    "sphinx-autopackagesummary",
    "sphinx-issues",
    "sphinx-prompt",
    "sphinx-rtd-theme",
    "sphinx",
    "sphinxcontrib-bibtex",
]
test = [
    "pytest",
    "pytest-cov",
]

[tool.setuptools]
zip-safe = false
include-package-data = true
packages = {find = {exclude = ["docs*", "examples*", "tests*", "user_stories*"]}}

[tool.setuptools.package-data]
"sacroml.safemodel" = ["rules.json"]

[tool.ruff]
indent-width = 4
line-length = 88
target-version = "py39"
extend-include = ["*.ipynb"]

lint.select = [
#  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
#  "C90", # mccabe
  "D",   # pydocstyle
#  "DTZ", # flake8-datetimez
#  "E",   # pycodestyle
  "EM",  # flake8-errmsg
  "ERA", # eradicate
  "F",   # Pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "N",   # pep8-naming
#  "PD",  # pandas-vet
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
#  "PL",  # Pylint
  "PLC", # Pylint
  "PLE", # Pylint
#  "PLR", # Pylint
  "PLW", # Pylint
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
  "RET", # flake8-return
  "RUF100",  # Ruff-specific
  "S",   # flake8-bandit
  "SIM", # flake8-simplify
#  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT",  # flake8-2020
]

exclude = [
    "**example-notebook-SVC.ipynb",
    "**example-notebook-decisiontree.ipynb",
    "**example-notebook-keras.ipynb",
    "**example-notebook-randomforest.ipynb",
    "**attribute_inference_cancer.ipynb",
    "**instance_based_mimic.ipynb",
    "**membership_inference_cancer.ipynb",
]

lint.ignore = [
    "EM101",   # raw-string-in-exception
    "EM102",   # f-string-in-exception
    "PLC0206", # dict-index-missing-items
    "S101",    # allow asserts
    "S301",    # allow pickle
]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = [
    "X", "X_train", "X_val", "X_test", "X_predict",
    "X_target_train", "X_shadow_train", "N", "C",
    "X_train_orig", "X_test_orig", "X_orig", "X_transformed",
    "X_encoded", "X_tensor", "X_train_transformed", "X_test_transformed",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint.extend-per-file-ignores]
"user_stories/**/*" = ["ANN"]
"tests/**/*" = ["S101", "PLR2004", "ANN"]
"sacroml/attacks/structural_attack.py" = ["PLR2004"]

[tool.codespell]
ignore-words-list = [
    "fpr",
    "tre",
    "sav",
    "provid",
    "assertIn",
    "worstcase",
    "WorstCase",
    "worst-case",
]
